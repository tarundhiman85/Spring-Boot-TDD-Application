name: CI/CD Pipeline with Docker

on:
  push:
    branches:
      - testing-ci-cd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Step 4: Build the application
      - name: Build with Maven
        run: mvn clean package --no-transfer-progress

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t spring-boot-tdd-app:latest .
          docker tag spring-boot-tdd-app:latest spring-boot-tdd-app:${{ github.run_id }}

      # Step 6: Remove Previous Container
      - name: Remove Previous Container
        run: |
          docker stop spring-boot-tdd-app || true
          docker rm spring-boot-tdd-app || true

      # Step 7: Run New Container
      - name: Run New Docker Container
        run: |
          docker run -d --name spring-boot-tdd-app -p 8080:8080 spring-boot-tdd-app:${{ github.run_id }}
     
      - name: Debug DockerHub Login
        run: |
          echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Docker Password is set: $([[ -n ${{ secrets.DOCKER_PASSWORD }} ]] && echo 'YES' || echo 'NO')"
  
     # Step 8: Push Docker Image to GitHub Container Registry (Optional)
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker tag spring-boot-tdd-app:${{ github.run_id }} ghcr.io/${{ github.repository_owner }}/spring-boot-tdd-app:${{ github.run_id }}
          docker push ghcr.io/${{ github.repository_owner }}/spring-boot-tdd-app:${{ github.run_id }}

      # Step 9: Remove Old Images
      - name: Remove Old Docker Images
        run: |
          docker rmi spring-boot-tdd-app:latest || true
          docker image prune -f
