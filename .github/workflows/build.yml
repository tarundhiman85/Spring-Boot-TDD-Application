name: CI/CD Pipeline with Docker

on:
  push:
    branches:
      - testing-ci-cd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Step 4: Build the application
      - name: Build with Maven
        run: mvn clean package --no-transfer-progress

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t spring-boot-tdd-app:latest .
          docker tag spring-boot-tdd-app:latest ${{ secrets.DOCKER_USERNAME }}/spring-boot-tdd-app:latest
          docker tag spring-boot-tdd-app:latest ${{ secrets.DOCKER_USERNAME }}/spring-boot-tdd-app:${{ github.run_id }}

      # Step 6: Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Push Docker Image to DockerHub
      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-tdd-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-tdd-app:${{ github.run_id }}

      # Step 8: Remove Old Images
      - name: Remove Old Docker Images
        run: |
          docker rmi spring-boot-tdd-app:latest || true
          docker image prune -f
